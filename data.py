class Data:
    p = 0.2  # коэффициент испарения

    # Настройка количества и координат городов
    citiesCount = 10
    cords = [
        [-250, 50],
        [-175, 100],
        [-175, -75],
        [-100, 0],
        [-50, -100],
        [25, 75],
        [100, 0],
        [150, -25],
        [175, 75],
        [200, 0]
    ]

    # Расстояния между городами
    distances = {
        '1-2': 90,
        '1-4': 158,
        '2-3': 175,
        '2-6': 202,
        '3-5': 127,
        '4-5': 112,
        '4-6': 146,
        '5-7': 180,
        '6-7': 106,
        '7-8': 70,
        '7-9': 106,
        '7-10': 100,
        '8-10': 70,
        '9-10': 79
    }

    # Возможные пути из городов
    ways = {
        '1': [2, 4],
        '2': [3, 6],
        '3': [2, 5],
        '4': [1, 6, 5],
        '5': [3, 4, 7],
        '6': [2, 4, 7],
        '7': [5, 6, 8, 9, 10],
        '8': [7, 10],
        '9': [7, 10],
        '10': [7, 8, 9]
    }

    t0 = 3  # начальное значение феромонов
    # количество феромонов на путях городами
    amount_of_pheromones = {
        '1-2': t0,
        '1-4': t0,
        '2-3': t0,
        '2-6': t0,
        '3-5': t0,
        '4-5': t0,
        '4-6': t0,
        '5-7': t0,
        '6-7': t0,
        '7-8': t0,
        '7-9': t0,
        '7-10': t0,
        '8-10': t0,
        '9-10': t0
    }

    @staticmethod
    def regenerate_pheromones(ways: dict):
        """Устанавливает новое кол-во феромонов"""
        for key in ways.keys():
            Data.amount_of_pheromones[key] = ((1 - Data.p) * Data.amount_of_pheromones[key]) + ways[key]

        # Пути для муравьев

    paths = [
        [0, 1, 5, 6, 9],
        [0, 1, 5, 6, 8, 9],
        [0, 1, 5, 6, 7, 9],
        [0, 3, 4, 6, 9],
        [0, 3, 5, 6, 9],
        [0, 3, 5, 6, 8, 9],
        [0, 3, 5, 6, 7, 9],
        [0, 1, 2, 4, 6, 9],
        [0, 1, 2, 4, 6, 8, 9],
        [0, 1, 2, 4, 6, 7, 9]
    ]

    paths2 = [
        [0, 1, 2, 4, 3, 5, 6, 7, 9],
        [0, 1, 2, 4, 3, 5, 6, 7, 9],
        [0, 1, 2, 4, 6, 7, 9],
        [0, 1, 5, 6, 9],
        [0, 1, 2, 4, 3, 5, 6, 7, 9],
        [0, 1, 2, 4, 3, 5, 6, 8, 9],
        [0, 1, 5, 6, 9],
        [0, 1, 5, 6, 7, 9],
        [0, 1, 2, 4, 3, 5, 6, 8, 9],
        [0, 1, 5, 6, 9]
    ]



